// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`debug 1`] = `
"<View>
  <Text>
    Is the banana fresh?
  </Text>
  <Text
    testID=\\"bananaFresh\\"
  >
    not fresh
  </Text>
  <TextInput
    allowFontScaling={true}
    placeholder=\\"Add custom freshness\\"
    rejectResponderTermination={true}
    testID=\\"bananaCustomFreshness\\"
    underlineColorAndroid=\\"transparent\\"
    value=\\"Custom Freshie\\"
  />
  <TextInput
    allowFontScaling={true}
    placeholder=\\"Who inspected freshness?\\"
    rejectResponderTermination={true}
    testID=\\"bananaChef\\"
    underlineColorAndroid=\\"transparent\\"
    value=\\"I inspected freshie\\"
  />
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function bound touchableHandlePress]}
    onResponderGrant={[Function bound touchableHandleResponderGrant]}
    onResponderMove={[Function bound touchableHandleResponderMove]}
    onResponderRelease={[Function bound touchableHandleResponderRelease]}
    onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
    onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
    onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
    style={
      Object {
        \\"opacity\\": 1,
      }
    }
  >
    <Text>
      Change freshness!
    </Text>
  </View>
  <Text
    testID=\\"duplicateText\\"
  >
    First Text
  </Text>
  <Text
    testID=\\"duplicateText\\"
  >
    Second Text
  </Text>
  <Text>
    0
  </Text>
</View>"
`;

exports[`debug changing component: bananaFresh button message should now be "fresh" 1`] = `
"<View>
  <Text>
    Is the banana fresh?
  </Text>
  <Text
    testID=\\"bananaFresh\\"
  >
    fresh
  </Text>
  <TextInput
    allowFontScaling={true}
    placeholder=\\"Add custom freshness\\"
    rejectResponderTermination={true}
    testID=\\"bananaCustomFreshness\\"
    underlineColorAndroid=\\"transparent\\"
    value=\\"Custom Freshie\\"
  />
  <TextInput
    allowFontScaling={true}
    placeholder=\\"Who inspected freshness?\\"
    rejectResponderTermination={true}
    testID=\\"bananaChef\\"
    underlineColorAndroid=\\"transparent\\"
    value=\\"I inspected freshie\\"
  />
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function bound touchableHandlePress]}
    onResponderGrant={[Function bound touchableHandleResponderGrant]}
    onResponderMove={[Function bound touchableHandleResponderMove]}
    onResponderRelease={[Function bound touchableHandleResponderRelease]}
    onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
    onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
    onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
    style={
      Object {
        \\"opacity\\": 1,
      }
    }
  >
    <Text>
      Change freshness!
    </Text>
  </View>
  <Text
    testID=\\"duplicateText\\"
  >
    First Text
  </Text>
  <Text
    testID=\\"duplicateText\\"
  >
    Second Text
  </Text>
  <Text>
    0
  </Text>
</View>"
`;

exports[`debug: shallow 1`] = `
"<View>
  <Text>
    Is the banana fresh?
  </Text>
  <Text
    testID=\\"bananaFresh\\"
  >
    not fresh
  </Text>
  <TextInput
    allowFontScaling={true}
    placeholder=\\"Add custom freshness\\"
    rejectResponderTermination={true}
    testID=\\"bananaCustomFreshness\\"
    underlineColorAndroid=\\"transparent\\"
    value=\\"Custom Freshie\\"
  />
  <TextInput
    allowFontScaling={true}
    placeholder=\\"Who inspected freshness?\\"
    rejectResponderTermination={true}
    testID=\\"bananaChef\\"
    underlineColorAndroid=\\"transparent\\"
    value=\\"I inspected freshie\\"
  />
  <Button
    onPress={[Function anonymous]}
    type=\\"primary\\"
  >
    Change freshness!
  </Button>
  <Text
    testID=\\"duplicateText\\"
  >
    First Text
  </Text>
  <Text
    testID=\\"duplicateText\\"
  >
    Second Text
  </Text>
  <Text>
    0
  </Text>
</View>"
`;

exports[`debug: shallow with message 1`] = `
"my other custom message

<View>
  <Text>
    Is the banana fresh?
  </Text>
  <Text
    testID=\\"bananaFresh\\"
  >
    not fresh
  </Text>
  <TextInput
    allowFontScaling={true}
    placeholder=\\"Add custom freshness\\"
    rejectResponderTermination={true}
    testID=\\"bananaCustomFreshness\\"
    underlineColorAndroid=\\"transparent\\"
    value=\\"Custom Freshie\\"
  />
  <TextInput
    allowFontScaling={true}
    placeholder=\\"Who inspected freshness?\\"
    rejectResponderTermination={true}
    testID=\\"bananaChef\\"
    underlineColorAndroid=\\"transparent\\"
    value=\\"I inspected freshie\\"
  />
  <Button
    onPress={[Function anonymous]}
    type=\\"primary\\"
  >
    Change freshness!
  </Button>
  <Text
    testID=\\"duplicateText\\"
  >
    First Text
  </Text>
  <Text
    testID=\\"duplicateText\\"
  >
    Second Text
  </Text>
  <Text>
    0
  </Text>
</View>"
`;

exports[`debug: with message 1`] = `
"my custom message

<View>
  <Text>
    Is the banana fresh?
  </Text>
  <Text
    testID=\\"bananaFresh\\"
  >
    not fresh
  </Text>
  <TextInput
    allowFontScaling={true}
    placeholder=\\"Add custom freshness\\"
    rejectResponderTermination={true}
    testID=\\"bananaCustomFreshness\\"
    underlineColorAndroid=\\"transparent\\"
    value=\\"Custom Freshie\\"
  />
  <TextInput
    allowFontScaling={true}
    placeholder=\\"Who inspected freshness?\\"
    rejectResponderTermination={true}
    testID=\\"bananaChef\\"
    underlineColorAndroid=\\"transparent\\"
    value=\\"I inspected freshie\\"
  />
  <View
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    onClick={[Function bound touchableHandlePress]}
    onResponderGrant={[Function bound touchableHandleResponderGrant]}
    onResponderMove={[Function bound touchableHandleResponderMove]}
    onResponderRelease={[Function bound touchableHandleResponderRelease]}
    onResponderTerminate={[Function bound touchableHandleResponderTerminate]}
    onResponderTerminationRequest={[Function bound touchableHandleResponderTerminationRequest]}
    onStartShouldSetResponder={[Function bound touchableHandleStartShouldSetResponder]}
    style={
      Object {
        \\"opacity\\": 1,
      }
    }
  >
    <Text>
      Change freshness!
    </Text>
  </View>
  <Text
    testID=\\"duplicateText\\"
  >
    First Text
  </Text>
  <Text
    testID=\\"duplicateText\\"
  >
    Second Text
  </Text>
  <Text>
    0
  </Text>
</View>"
`;

exports[`toJSON 1`] = `
<View
  accessible={true}
  clickable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <Text>
    press me
  </Text>
</View>
`;
