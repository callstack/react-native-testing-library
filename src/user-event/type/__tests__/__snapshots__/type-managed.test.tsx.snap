// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`type() for managed TextInput supports basic case: input: "Wow" 1`] = `
[
  {
    "name": "pressIn",
    "payload": {
      "currentTarget": {
        "measure": [MockFunction],
      },
      "nativeEvent": {
        "changedTouches": [],
        "identifier": 0,
        "locationX": 0,
        "locationY": 0,
        "pageX": 0,
        "pageY": 0,
        "target": 0,
        "timestamp": 100100100100,
        "touches": [],
      },
      "persist": [MockFunction],
      "target": {},
    },
  },
  {
    "name": "focus",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
      },
      "target": {},
    },
  },
  {
    "name": "pressOut",
    "payload": {
      "currentTarget": {
        "measure": [MockFunction],
      },
      "nativeEvent": {
        "changedTouches": [],
        "identifier": 0,
        "locationX": 0,
        "locationY": 0,
        "pageX": 0,
        "pageY": 0,
        "target": 0,
        "timestamp": 100100100100,
        "touches": [],
      },
      "persist": [MockFunction],
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "W",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "W",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "W",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 1,
          "start": 1,
        },
      },
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "o",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "Wo",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "Wo",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 2,
          "start": 2,
        },
      },
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "w",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "Wow",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "Wow",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 3,
          "start": 3,
        },
      },
      "target": {},
    },
  },
  {
    "name": "endEditing",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
        "text": "Wow",
      },
      "target": {},
    },
  },
  {
    "name": "blur",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
      },
      "target": {},
    },
  },
]
`;

exports[`type() for managed TextInput supports rejecting TextInput: input: "ABC", value: "XXX" 1`] = `
[
  {
    "name": "pressIn",
    "payload": {
      "currentTarget": {
        "measure": [MockFunction],
      },
      "nativeEvent": {
        "changedTouches": [],
        "identifier": 0,
        "locationX": 0,
        "locationY": 0,
        "pageX": 0,
        "pageY": 0,
        "target": 0,
        "timestamp": 100100100100,
        "touches": [],
      },
      "persist": [MockFunction],
      "target": {},
    },
  },
  {
    "name": "focus",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
      },
      "target": {},
    },
  },
  {
    "name": "pressOut",
    "payload": {
      "currentTarget": {
        "measure": [MockFunction],
      },
      "nativeEvent": {
        "changedTouches": [],
        "identifier": 0,
        "locationX": 0,
        "locationY": 0,
        "pageX": 0,
        "pageY": 0,
        "target": 0,
        "timestamp": 100100100100,
        "touches": [],
      },
      "persist": [MockFunction],
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "A",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "XXXA",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "XXXA",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 4,
          "start": 4,
        },
      },
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "B",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "XXXB",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "XXXB",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 4,
          "start": 4,
        },
      },
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "C",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "XXXC",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "XXXC",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 4,
          "start": 4,
        },
      },
      "target": {},
    },
  },
  {
    "name": "endEditing",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
        "text": "XXX",
      },
      "target": {},
    },
  },
  {
    "name": "blur",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
      },
      "target": {},
    },
  },
]
`;
