// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`type() supports backspace: input: "{Backspace}a", defaultValue: "xxx" 1`] = `
[
  {
    "name": "pressIn",
    "payload": {
      "currentTarget": {
        "measure": [Function],
      },
      "nativeEvent": {
        "changedTouches": [],
        "identifier": 0,
        "locationX": 0,
        "locationY": 0,
        "pageX": 0,
        "pageY": 0,
        "target": 0,
        "timestamp": 100100100100,
        "touches": [],
      },
      "persist": [Function],
      "target": {},
    },
  },
  {
    "name": "focus",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
      },
      "target": {},
    },
  },
  {
    "name": "pressOut",
    "payload": {
      "currentTarget": {
        "measure": [Function],
      },
      "nativeEvent": {
        "changedTouches": [],
        "identifier": 0,
        "locationX": 0,
        "locationY": 0,
        "pageX": 0,
        "pageY": 0,
        "target": 0,
        "timestamp": 100100100100,
        "touches": [],
      },
      "persist": [Function],
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "Backspace",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "xx",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "xx",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 2,
          "start": 2,
        },
      },
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "a",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "xxa",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "xxa",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 3,
          "start": 3,
        },
      },
      "target": {},
    },
  },
  {
    "name": "endEditing",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
        "text": "xxa",
      },
      "target": {},
    },
  },
  {
    "name": "blur",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
      },
      "target": {},
    },
  },
]
`;

exports[`type() supports basic case: input: "abc" 1`] = `
[
  {
    "name": "pressIn",
    "payload": {
      "currentTarget": {
        "measure": [Function],
      },
      "nativeEvent": {
        "changedTouches": [],
        "identifier": 0,
        "locationX": 0,
        "locationY": 0,
        "pageX": 0,
        "pageY": 0,
        "target": 0,
        "timestamp": 100100100100,
        "touches": [],
      },
      "persist": [Function],
      "target": {},
    },
  },
  {
    "name": "focus",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
      },
      "target": {},
    },
  },
  {
    "name": "pressOut",
    "payload": {
      "currentTarget": {
        "measure": [Function],
      },
      "nativeEvent": {
        "changedTouches": [],
        "identifier": 0,
        "locationX": 0,
        "locationY": 0,
        "pageX": 0,
        "pageY": 0,
        "target": 0,
        "timestamp": 100100100100,
        "touches": [],
      },
      "persist": [Function],
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "a",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "a",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "a",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 1,
          "start": 1,
        },
      },
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "b",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "ab",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "ab",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 2,
          "start": 2,
        },
      },
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "c",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "abc",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "abc",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 3,
          "start": 3,
        },
      },
      "target": {},
    },
  },
  {
    "name": "endEditing",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
        "text": "abc",
      },
      "target": {},
    },
  },
  {
    "name": "blur",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
      },
      "target": {},
    },
  },
]
`;

exports[`type() supports defaultValue prop: input: "ab", defaultValue: "xxx" 1`] = `
[
  {
    "name": "pressIn",
    "payload": {
      "currentTarget": {
        "measure": [Function],
      },
      "nativeEvent": {
        "changedTouches": [],
        "identifier": 0,
        "locationX": 0,
        "locationY": 0,
        "pageX": 0,
        "pageY": 0,
        "target": 0,
        "timestamp": 100100100100,
        "touches": [],
      },
      "persist": [Function],
      "target": {},
    },
  },
  {
    "name": "focus",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
      },
      "target": {},
    },
  },
  {
    "name": "pressOut",
    "payload": {
      "currentTarget": {
        "measure": [Function],
      },
      "nativeEvent": {
        "changedTouches": [],
        "identifier": 0,
        "locationX": 0,
        "locationY": 0,
        "pageX": 0,
        "pageY": 0,
        "target": 0,
        "timestamp": 100100100100,
        "touches": [],
      },
      "persist": [Function],
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "a",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "xxxa",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "xxxa",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 4,
          "start": 4,
        },
      },
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "b",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "xxxab",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "xxxab",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 5,
          "start": 5,
        },
      },
      "target": {},
    },
  },
  {
    "name": "endEditing",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
        "text": "xxxab",
      },
      "target": {},
    },
  },
  {
    "name": "blur",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
      },
      "target": {},
    },
  },
]
`;

exports[`type() supports multiline: input: "{Enter}\\n", multiline: true 1`] = `
[
  {
    "name": "pressIn",
    "payload": {
      "currentTarget": {
        "measure": [Function],
      },
      "nativeEvent": {
        "changedTouches": [],
        "identifier": 0,
        "locationX": 0,
        "locationY": 0,
        "pageX": 0,
        "pageY": 0,
        "target": 0,
        "timestamp": 100100100100,
        "touches": [],
      },
      "persist": [Function],
      "target": {},
    },
  },
  {
    "name": "focus",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
      },
      "target": {},
    },
  },
  {
    "name": "pressOut",
    "payload": {
      "currentTarget": {
        "measure": [Function],
      },
      "nativeEvent": {
        "changedTouches": [],
        "identifier": 0,
        "locationX": 0,
        "locationY": 0,
        "pageX": 0,
        "pageY": 0,
        "target": 0,
        "timestamp": 100100100100,
        "touches": [],
      },
      "persist": [Function],
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "Enter",
      },
      "target": {},
    },
  },
  {
    "name": "textInput",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "previousText": "",
        "range": {
          "end": 1,
          "start": 1,
        },
        "target": 0,
        "text": "
",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "
",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "
",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 1,
          "start": 1,
        },
      },
      "target": {},
    },
  },
  {
    "name": "contentSizeChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "contentSize": {
          "height": 32,
          "width": 0,
        },
        "target": 0,
      },
      "target": {},
    },
  },
  {
    "name": "keyPress",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "key": "Enter",
      },
      "target": {},
    },
  },
  {
    "name": "textInput",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "previousText": "
",
        "range": {
          "end": 2,
          "start": 2,
        },
        "target": 0,
        "text": "

",
      },
      "target": {},
    },
  },
  {
    "name": "change",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "eventCount": 0,
        "target": 0,
        "text": "

",
      },
      "target": {},
    },
  },
  {
    "name": "changeText",
    "payload": "

",
  },
  {
    "name": "selectionChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "selection": {
          "end": 2,
          "start": 2,
        },
      },
      "target": {},
    },
  },
  {
    "name": "contentSizeChange",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "contentSize": {
          "height": 48,
          "width": 0,
        },
        "target": 0,
      },
      "target": {},
    },
  },
  {
    "name": "endEditing",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
        "text": "

",
      },
      "target": {},
    },
  },
  {
    "name": "blur",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
      },
      "target": {},
    },
  },
]
`;

exports[`type() works when not all events have handlers: input: "abc" 1`] = `
[
  {
    "name": "changeText",
    "payload": "a",
  },
  {
    "name": "changeText",
    "payload": "ab",
  },
  {
    "name": "changeText",
    "payload": "abc",
  },
  {
    "name": "endEditing",
    "payload": {
      "currentTarget": {},
      "nativeEvent": {
        "target": 0,
        "text": "abc",
      },
      "target": {},
    },
  },
]
`;
