"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["820"],{301:function(e,t,n){n.r(t),n.d(t,{default:()=>a});var i=n(5893),r=n(65);function s(e){let t=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",code:"code",pre:"pre"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.h1,{id:"migration-to-11x",children:["Migration to 11.x",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#migration-to-11x",children:"#"})]}),"\n",(0,i.jsx)(t.p,{children:"Migration to React Native Testing Library version 11 from version 9.x or 10.x should be a relatively easy task due small amount of breaking changes."}),"\n",(0,i.jsxs)(t.h2,{id:"breaking-changes",children:["Breaking changes",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#breaking-changes",children:"#"})]}),"\n",(0,i.jsxs)(t.h3,{id:"update-to-jest-28-if-you-use-fake-timers",children:["Update to Jest 28 if you use fake timers",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#update-to-jest-28-if-you-use-fake-timers",children:"#"})]}),"\n",(0,i.jsxs)(t.p,{children:["If you use fake timers in any of your tests you should update your Jest dependencies to version 28. This is due to the fact that ",(0,i.jsxs)(t.a,{href:"https://jestjs.io/docs/jest-object#jestusefaketimersfaketimersconfig",target:"_blank",rel:"noopener noreferrer",children:[(0,i.jsx)(t.code,{children:"jest.useFakeTimers()"})," config structure"]})," has changed."]}),"\n",(0,i.jsxs)(t.h3,{id:"refactor-legacy-waitforoptions-position",children:["Refactor legacy ",(0,i.jsx)(t.code,{children:"waitForOptions"})," position",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#refactor-legacy-waitforoptions-position",children:"#"})]}),"\n",(0,i.jsxs)(t.p,{children:["In version 9 we introducted query ",(0,i.jsx)(t.code,{children:"options"})," parameters for each query type. This affected all ",(0,i.jsx)(t.code,{children:"findBy"})," and ",(0,i.jsx)(t.code,{children:"findAllBy"})," queries because their signatures changed e.g. from:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"function findByText(text: TextMatch, waitForOptions?: WaitForOptions);\nfunction findAllByText(text: TextMatch, waitForOptions?: WaitForOptions);\n"})}),"\n",(0,i.jsx)(t.p,{children:"to"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"function findByText(text: TextMatch, options?: TextMatchOptions, waitForOptions?: WaitForOptions);\nfunction findAllByText(\n  text: TextMatch,\n  options?: TextMatchOptions,\n  waitForOptions?: WaitForOptions\n);\n"})}),"\n",(0,i.jsxs)(t.p,{children:["In order to facilitate transition, in version 9 and 10, we provided a temporary possibility to pass ",(0,i.jsx)(t.code,{children:"WaitForOptions"})," like ",(0,i.jsx)(t.code,{children:"timeout"}),", ",(0,i.jsx)(t.code,{children:"interval"}),", etc inside ",(0,i.jsx)(t.code,{children:"options"})," argument. From this release we require passing these as the proper third parameter."]}),"\n",(0,i.jsx)(t.p,{children:"This change is easy to implement:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"findByText(/Text/, { timeout: 1000 });\n"})}),"\n",(0,i.jsx)(t.p,{children:"should become"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"findByText(/Text/, {}, { timeout: 1000 });\n"})}),"\n",(0,i.jsxs)(t.h3,{id:"triggering-non-touch-events-on-targets-with-pointereventsbox-none-prop",children:["Triggering non-touch events on targets with ",(0,i.jsx)(t.code,{children:'pointerEvents="box-none"'})," prop",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#triggering-non-touch-events-on-targets-with-pointereventsbox-none-prop",children:"#"})]}),"\n",(0,i.jsxs)(t.p,{children:["Up to version 10, RNTL disables all events for a target with ",(0,i.jsx)(t.code,{children:'pointerEvents="box-none"'}),". This behavior is counter to how React Native itself functions."]}),"\n",(0,i.jsxs)(t.p,{children:["From version 11, RNTL continues to disable ",(0,i.jsx)(t.code,{children:"press"})," event for these targets but allows triggering other events, e.g. ",(0,i.jsx)(t.code,{children:"layout"}),"."]}),"\n",(0,i.jsxs)(t.h2,{id:"full-changelog",children:["Full Changelog",(0,i.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#full-changelog",children:"#"})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://github.com/callstack/react-native-testing-library/compare/v10.1.1...v11.0.0",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/callstack/react-native-testing-library/compare/v10.1.1...v11.0.0"})})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,r.ah)(),e.components);return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}let a=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["12.x%2Fdocs%2Fmigration%2Fprevious%2Fv11.mdx"]={toc:[{text:"Breaking changes",id:"breaking-changes",depth:2},{text:"Update to Jest 28 if you use fake timers",id:"update-to-jest-28-if-you-use-fake-timers",depth:3},{text:"Refactor legacy `waitForOptions` position",id:"refactor-legacy-waitforoptions-position",depth:3},{text:'Triggering non-touch events on targets with `pointerEvents="box-none"` prop',id:"triggering-non-touch-events-on-targets-with-pointereventsbox-none-prop",depth:3},{text:"Full Changelog",id:"full-changelog",depth:2}],title:"Migration to 11.x",headingTitle:"Migration to 11.x",frontmatter:{}}}}]);