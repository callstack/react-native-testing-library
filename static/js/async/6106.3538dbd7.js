(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["6106"],{2348:function(e,n,r){"use strict";r.r(n);var t=r("5893"),a=r("65");function i(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",code:"code",blockquote:"blockquote",pre:"pre",h3:"h3"},(0,a.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"troubleshooting",children:["Troubleshooting",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#troubleshooting",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"This guide describes common issues found by users when integrating React Native Test Library to their projects:"}),"\n",(0,t.jsxs)(n.h2,{id:"matching-react-native-react--react-test-renderer-versions",children:["Matching React Native, React & React Test Renderer versions",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#matching-react-native-react--react-test-renderer-versions",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Check that you have matching versions of core dependencies:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"React Native"}),"\n",(0,t.jsx)(n.li,{children:"React"}),"\n",(0,t.jsx)(n.li,{children:"React Test Renderer"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["React Native uses different versioning scheme from React, you can use ",(0,t.jsx)(n.a,{href:"https://react-native-community.github.io/upgrade-helper/",target:"_blank",rel:"noopener noreferrer",children:"React Native Upgrade Helper"})," to find the correct matching between React Native & React versions. In case you use Expo, run ",(0,t.jsx)(n.code,{children:"npx expo install --fix"})," in your project to validate and install compatible versions of these dependencies."]}),"\n",(0,t.jsxs)(n.p,{children:["React Test Renderer usually has same major & minor version as React, as they are closely related and React Test Renderer is part of ",(0,t.jsx)(n.a,{href:"https://github.com/facebook/react",target:"_blank",rel:"noopener noreferrer",children:"React monorepo"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Related issues: ",(0,t.jsx)(n.a,{href:"https://github.com/callstack/react-native-testing-library/issues/1061",target:"_blank",rel:"noopener noreferrer",children:"#1061"}),", ",(0,t.jsx)(n.a,{href:"https://github.com/callstack/react-native-testing-library/issues/938",target:"_blank",rel:"noopener noreferrer",children:"#938"}),", ",(0,t.jsx)(n.a,{href:"https://github.com/callstack/react-native-testing-library/issues/920",target:"_blank",rel:"noopener noreferrer",children:"#920"})]}),"\n",(0,t.jsx)(n.p,{children:"Errors that might indicate that you are facing this issue:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"TypeError: Cannot read property 'current' of undefined"})," when calling ",(0,t.jsx)(n.code,{children:"render()"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"TypeError: Cannot read property 'isBatchingLegacy' of undefined"})," when calling ",(0,t.jsx)(n.code,{children:"render()"})]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"example-repository",children:["Example repository",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#example-repository",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["We maintain an ",(0,t.jsx)(n.a,{href:"https://github.com/callstack/react-native-testing-library/tree/main/examples/basic",target:"_blank",rel:"noopener noreferrer",children:"example repository"})," that showcases a modern React Native Testing Library setup with TypeScript, etc."]}),"\n",(0,t.jsx)(n.p,{children:"In case something does not work in your setup you can refer to this repository for recommended configuration."}),"\n",(0,t.jsxs)(n.h2,{id:"undefined-component-error",children:["Undefined component error",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#undefined-component-error",children:"#"})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Warning: React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This frequently happens when you mock a complex module incorrectly, e.g.:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"jest.mock('@react-navigation/native', () => {\n  return {\n    useNavigation: jest.fn(),\n  };\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The above mock will mock ",(0,t.jsx)(n.code,{children:"useNavigation"})," hook as intended, but at the same time all other exports from ",(0,t.jsx)(n.code,{children:"@react-navigation/native"})," package are now ",(0,t.jsx)(n.code,{children:"undefined"}),". If you want to use ",(0,t.jsx)(n.code,{children:"NavigationContainer"})," component from the same package it will be ",(0,t.jsx)(n.code,{children:"undefined"})," and result in the error above."]}),"\n",(0,t.jsxs)(n.p,{children:["In order to mock only a part of given package you should re-export all other exports using ",(0,t.jsx)(n.code,{children:"jest.requireActual"})," helper:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"jest.mock('@react-navigation/native', () => {\n  return {\n    ...jest.requireActual('@react-navigation/native'),\n    useNavigation: jest.fn(),\n  };\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["That way the mock will re-export all of the ",(0,t.jsx)(n.code,{children:"@react-navigation/native"})," members and overwrite only the ",(0,t.jsx)(n.code,{children:"useNavigation"})," hook."]}),"\n",(0,t.jsxs)(n.p,{children:["Alternatively, you can use ",(0,t.jsx)(n.code,{children:"jest.spyOn"})," to mock package exports selectively."]}),"\n",(0,t.jsxs)(n.h3,{id:"mocking-react-native",children:["Mocking React Native",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#mocking-react-native",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["In case of mocking ",(0,t.jsx)(n.code,{children:"react-native"})," package you should not mock the whole package at once, as this approach has issues with ",(0,t.jsx)(n.code,{children:"jest.requireActual"})," call. In this case it is recommended to mock particular library paths inside the package, e.g.:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:"title=jest-setup.ts",children:"jest.mock('react-native/Libraries/EventEmitter/NativeEventEmitter');\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"act-warnings",children:["Act warnings",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#act-warnings",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["When writing tests you may encounter warnings connected with ",(0,t.jsx)(n.code,{children:"act()"})," function. There are two kinds of these warnings:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["sync ",(0,t.jsx)(n.code,{children:"act()"})," warning - ",(0,t.jsx)(n.code,{children:"Warning: An update to Component inside a test was not wrapped in act(...)"})]}),"\n",(0,t.jsxs)(n.li,{children:["async ",(0,t.jsx)(n.code,{children:"act()"})," warning - ",(0,t.jsx)(n.code,{children:"Warning: You called act(async () => ...) without await"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You can read more about ",(0,t.jsx)(n.code,{children:"act()"})," function in our ",(0,t.jsxs)(n.a,{href:"/docs/advanced/understanding-act",children:["understanding ",(0,t.jsx)(n.code,{children:"act"})," function guide"]}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Normally, you should not encounter sync ",(0,t.jsx)(n.code,{children:"act()"})," warnings, but if that happens this probably indicate an issue with your test and should be investigated."]}),"\n",(0,t.jsxs)(n.p,{children:["In case of async ",(0,t.jsx)(n.code,{children:"act()"})," function this might happen more or less randomly, especially if your components contain async logic. So far this warning does not seem to affect test correctness."]})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}n.default=s,s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["13.x%2Fdocs%2Fguides%2Ftroubleshooting.mdx"]={toc:[{text:"Matching React Native, React & React Test Renderer versions",id:"matching-react-native-react--react-test-renderer-versions",depth:2},{text:"Example repository",id:"example-repository",depth:2},{text:"Undefined component error",id:"undefined-component-error",depth:2},{text:"Mocking React Native",id:"mocking-react-native",depth:3},{text:"Act warnings",id:"act-warnings",depth:2}],title:"Troubleshooting",frontmatter:{}}}}]);