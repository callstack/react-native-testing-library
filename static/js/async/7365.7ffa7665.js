"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["7365"],{86:function(e,t,s){s.r(t),s.d(t,{default:()=>c});var n=s(5893),i=s(65);function r(e){let t=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",code:"code",pre:"pre",ul:"ul",li:"li"},(0,i.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h1,{id:"migration-to-13x",children:["Migration to 13.x",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#migration-to-13x",children:"#"})]}),"\n",(0,n.jsx)(t.p,{children:"This guide describes the migration to React Native Testing Library version 13 from version 12.x."}),"\n",(0,n.jsx)(t.p,{children:"Overall, the v13 release is relatively small, focusing on removing deprecated queries and improving the developer experience."}),"\n",(0,n.jsxs)(t.h2,{id:"breaking-changes",children:["Breaking changes",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#breaking-changes",children:"#"})]}),"\n",(0,n.jsxs)(t.h3,{id:"supported-react-and-react-native-versions",children:["Supported React and React Native versions",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#supported-react-and-react-native-versions",children:"#"})]}),"\n",(0,n.jsx)(t.p,{children:"This version supports only React 18+ and corresponding React Native versions (0.71+). If you use React 16 or 17, please use the latest of v12 versions."}),"\n",(0,n.jsx)(t.p,{children:"Note: currently, stable React Native is unavailable for React 19, which is still in the RC phase, so we test against React Native nightly builds."}),"\n",(0,n.jsxs)(t.h3,{id:"concurrent-rendering-by-default",children:["Concurrent rendering by default",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#concurrent-rendering-by-default",children:"#"})]}),"\n",(0,n.jsx)(t.p,{children:"This version introduces concurrent rendering by default. This change should not affect regular tests, but it might affect your tests if you use React Suspense or similar."}),"\n",(0,n.jsxs)(t.p,{children:["You can revert to legacy rendering by passing ",(0,n.jsx)(t.code,{children:"concurrentRoot: false"})," to ",(0,n.jsx)(t.a,{href:"/docs/api/render#concurrent-root",children:"render"})," or ",(0,n.jsx)(t.a,{href:"/docs/api/misc/config#concurrent-root",children:"configure"})," methods."]}),"\n",(0,n.jsx)(t.p,{children:"Note: in React 19, concurrent rendering is the only supported rendering mode."}),"\n",(0,n.jsxs)(t.h3,{id:"extend-jest-matchers-by-default",children:["Extend Jest matchers by default",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#extend-jest-matchers-by-default",children:"#"})]}),"\n",(0,n.jsxs)(t.p,{children:["You can remove ",(0,n.jsx)(t.code,{children:"import '@testing-library/react-native/extend-expect'"})," imports, as now Jest matchers are extended by default when you import anything from ",(0,n.jsx)(t.code,{children:"@testing-library/react-native"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["You can avoid the automatic extending of Jest matchers by importing ",(0,n.jsx)(t.code,{children:"@testing-library/react-native/pure"})," instead."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",meta:"title=jest-setup.ts",children:"// Remove this:\nimport '@testing-library/react-native/extend-expect';\n"})}),"\n",(0,n.jsxs)(t.h3,{id:"removed-deprecated-byaccessibilitystate-queries",children:["Removed deprecated ",(0,n.jsx)(t.code,{children:"*ByAccessibilityState"})," queries",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#removed-deprecated-byaccessibilitystate-queries",children:"#"})]}),"\n",(0,n.jsx)(t.p,{children:"We have removed this deprecated query as it is typically too general to give meaningful results. Use one of the following options:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"#by-role",children:"*ByRole"})," query with relevant state options: ",(0,n.jsx)(t.code,{children:"disabled"}),", ",(0,n.jsx)(t.code,{children:"selected"}),", ",(0,n.jsx)(t.code,{children:"checked"}),", ",(0,n.jsx)(t.code,{children:"expanded"})," and ",(0,n.jsx)(t.code,{children:"busy"})]}),"\n",(0,n.jsxs)(t.li,{children:["use built-in Jest matchers to check the state of element found using some other query:","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["enabled state: ",(0,n.jsx)(t.a,{href:"/docs/api/jest-matchers#tobeenabled",children:"toBeEnabled() / toBeDisabled()"})]}),"\n",(0,n.jsxs)(t.li,{children:["checked state: ",(0,n.jsx)(t.a,{href:"/docs/api/jest-matchers#tobechecked",children:"toBeChecked() / toBePartiallyChecked()"})]}),"\n",(0,n.jsxs)(t.li,{children:["selected state: ",(0,n.jsx)(t.a,{href:"/docs/api/jest-matchers#tobeselected",children:"toBeSelected()"})]}),"\n",(0,n.jsxs)(t.li,{children:["expanded state: ",(0,n.jsx)(t.a,{href:"/docs/api/jest-matchers#tobeexpanded",children:"toBeExpanded() / toBeCollapsed()"})]}),"\n",(0,n.jsxs)(t.li,{children:["busy state: ",(0,n.jsx)(t.a,{href:"/docs/api/jest-matchers#tobebusy",children:"toBeBusy()"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"// Replace this:\nconst view = screen.getByAccessibilityState({ disabled: true });\n\n// with this (getByRole query):\nconst view = screen.getByRole('<proper role here>', { disabled: true });\n\n// or this (Jest matcher):\nconst view = screen.getBy*(...); // Find the element using any query: *ByRole, *ByText, *ByTestId\nexpect(view).toBeDisabled(); // Assert its accessibility state\n"})}),"\n",(0,n.jsxs)(t.h3,{id:"removed-deprecated-byaccessibilityvalue-queries",children:["Removed deprecated ",(0,n.jsx)(t.code,{children:"*ByAccessibilityValue"})," queries",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#removed-deprecated-byaccessibilityvalue-queries",children:"#"})]}),"\n",(0,n.jsx)(t.p,{children:"We have removed this deprecated query as it is typically too general to give meaningful results. Use one of the following options:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"/docs/api/jest-matchers#tohaveaccessibilityvalue",children:"toHaveAccessibilityValue()"})," Jest matcher to check the state of element found using some other query"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"#by-role",children:"*ByRole"})," query with ",(0,n.jsx)(t.code,{children:"value"})," option"]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"// Replace this:\nconst view = screen.getByAccessibilityValue({ now: 50, min: 0, max: 50 });\n\n// with this (getByRole query):\nconst view = screen.getByRole('<proper role here>', { value: { now: 50, min: 0, max: 50 } });\n\n// or this (Jest matcher):\nconst view = screen.getBy*(...); // Find the element using any query: *ByRole, *ByText, *ByTestId\nexpect(view).toHaveAccessibilityValue({ now: 50, min: 0, max: 50 }); // Assert its accessibility value\n"})}),"\n",(0,n.jsxs)(t.h3,{id:"removed-jest-preset",children:["Removed Jest preset",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#removed-jest-preset",children:"#"})]}),"\n",(0,n.jsxs)(t.p,{children:["We have removed RNTL Jest preset, so you should change you ",(0,n.jsx)(t.code,{children:"jest.config.js"})," accordingly."]}),"\n",(0,n.jsx)(t.p,{children:"Replace:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",meta:"title=jest.config.js",children:"// replace this:\npreset: '@testing-library/react-native';\n\n// with this:\npreset: 'react-native';\n"})}),"\n",(0,n.jsxs)(t.h3,{id:"removed-debugshallow",children:["Removed ",(0,n.jsx)(t.code,{children:"debug.shallow"}),(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#removed-debugshallow",children:"#"})]}),"\n",(0,n.jsxs)(t.p,{children:["We didn't support shallow rendering for the time being. Now, we are removing the last remains of it: ",(0,n.jsx)(t.code,{children:"debug.shallow()"}),". If you are interested in shallow rendering see ",(0,n.jsx)(t.a,{href:"/docs/migration/previous/v2#removed-global-shallow-function",children:"here"}),"."]}),"\n",(0,n.jsxs)(t.h3,{id:"changes-to-accessibility-label-calculation",children:["Changes to accessibility label calculation",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#changes-to-accessibility-label-calculation",children:"#"})]}),"\n",(0,n.jsx)(t.p,{children:"Explicit labels:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"accessiblityLabelledBy"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"accessiblityLabel"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"aria-labelledby"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.code,{children:"aria-label"})}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"now take strict priority over implicit labels derived from the element's text content."}),"\n",(0,n.jsxs)(t.h2,{id:"other-changes",children:["Other changes",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#other-changes",children:"#"})]}),"\n",(0,n.jsxs)(t.h3,{id:"removed-host-component-names-autodetection",children:["Removed host component names autodetection",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#removed-host-component-names-autodetection",children:"#"})]}),"\n",(0,n.jsx)(t.p,{children:"This change should not break any tests, it should also make RNTL tests run 10-20% faster."}),"\n",(0,n.jsxs)(t.h3,{id:"use-react-implementation-of-act-instead-of-react-test-renderer-one",children:["Use React implementation of ",(0,n.jsx)(t.code,{children:"act"})," instead of React Test Renderer one",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#use-react-implementation-of-act-instead-of-react-test-renderer-one",children:"#"})]}),"\n",(0,n.jsx)(t.p,{children:"This change should not break any tests."}),"\n",(0,n.jsxs)(t.h3,{id:"updated-flushmicrotasks-internal-method",children:["Updated ",(0,n.jsx)(t.code,{children:"flushMicroTasks"})," internal method",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#updated-flushmicrotasks-internal-method",children:"#"})]}),"\n",(0,n.jsx)(t.p,{children:"This change should not break any tests."}),"\n",(0,n.jsxs)(t.h2,{id:"full-changelog",children:["Full Changelog",(0,n.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#full-changelog",children:"#"})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/callstack/react-native-testing-library/compare/v12.8.1...v13.0.0",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/callstack/react-native-testing-library/compare/v12.8.1...v13.0.0"})})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(r,{...e})}):r(e)}let c=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["13.x%2Fdocs%2Fmigration%2Fv13.mdx"]={toc:[{text:"Breaking changes",id:"breaking-changes",depth:2},{text:"Supported React and React Native versions",id:"supported-react-and-react-native-versions",depth:3},{text:"Concurrent rendering by default",id:"concurrent-rendering-by-default",depth:3},{text:"Extend Jest matchers by default",id:"extend-jest-matchers-by-default",depth:3},{text:"Removed deprecated `*ByAccessibilityState` queries",id:"removed-deprecated-byaccessibilitystate-queries",depth:3},{text:"Removed deprecated `*ByAccessibilityValue` queries",id:"removed-deprecated-byaccessibilityvalue-queries",depth:3},{text:"Removed Jest preset",id:"removed-jest-preset",depth:3},{text:"Removed `debug.shallow`",id:"removed-debugshallow",depth:3},{text:"Changes to accessibility label calculation",id:"changes-to-accessibility-label-calculation",depth:3},{text:"Other changes",id:"other-changes",depth:2},{text:"Removed host component names autodetection",id:"removed-host-component-names-autodetection",depth:3},{text:"Use React implementation of `act` instead of React Test Renderer one",id:"use-react-implementation-of-act-instead-of-react-test-renderer-one",depth:3},{text:"Updated `flushMicroTasks` internal method",id:"updated-flushmicrotasks-internal-method",depth:3},{text:"Full Changelog",id:"full-changelog",depth:2}],title:"Migration to 13.x",headingTitle:"Migration to 13.x",frontmatter:{}}}}]);