"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["9806"],{7787:function(e,n,r){r.r(n),r.d(n,{default:()=>d});var i=r(5893),s=r(65);function t(e){let n=Object.assign({h1:"h1",a:"a",div:"div",p:"p",code:"code",h2:"h2",h3:"h3",ol:"ol",li:"li",ul:"ul",pre:"pre"},(0,s.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"migration-to-7x",children:["Migration to 7.x",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#migration-to-7x",children:"#"})]}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive info",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"INFO"}),(0,i.jsxs)(n.div,{className:"rspress-directive-content",children:["\n",(0,i.jsxs)(n.p,{children:["We renamed the ",(0,i.jsx)(n.code,{children:"react-native-testing-library"})," npm package to ",(0,i.jsx)(n.code,{children:"@testing-library/react-native"}),', officially joining the "Testing Library" family \uD83C\uDF89.']}),"\n"]})]}),"\n",(0,i.jsx)(n.p,{children:"As the version 7.0 involves merging two libraries together, there are two variants for migration guide, dependent on library you used previously:"}),"\n",(0,i.jsxs)(n.h2,{id:"guide-for-react-native-testing-library-users",children:["Guide for ",(0,i.jsx)(n.code,{children:"react-native-testing-library"})," users",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#guide-for-react-native-testing-library-users",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["This guide describes steps necessary to migrate from React Native Testing Library ",(0,i.jsx)(n.code,{children:"v2.x"})," or ",(0,i.jsx)(n.code,{children:"v6.0"})," to ",(0,i.jsx)(n.code,{children:"v7.0"}),"."]}),"\n",(0,i.jsxs)(n.h3,{id:"renaming-the-library",children:["Renaming the library",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#renaming-the-library",children:"#"})]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Install ",(0,i.jsx)(n.code,{children:"@testing-library/react-native"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Uninstall ",(0,i.jsx)(n.code,{children:"react-native-testing-library"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Rename all references of ",(0,i.jsx)(n.code,{children:"react-native-testing-library"})," to ",(0,i.jsx)(n.code,{children:"@testing-library/react-native"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["You may have noticed a strange v2 to v7 upgrade, skipping versions 3, 4, 5 and 6. This is because we renamed the ",(0,i.jsx)(n.code,{children:"react-native-testing-library"})," npm package to ",(0,i.jsx)(n.code,{children:"@testing-library/react-native"}),', officially joining the "Testing Library" family \uD83C\uDF89. We\'re merging existing two libraries into a single one. The ',(0,i.jsx)(n.a,{href:"https://github.com/testing-library/native-testing-library",target:"_blank",rel:"noopener noreferrer",children:"native-testing-library"})," repository, which had v6, will soon be archived and using ",(0,i.jsx)(n.code,{children:"@testing-library/react-native"})," below v7, sourced from mentioned repository, is deprecated."]}),"\n",(0,i.jsx)(n.p,{children:'For branding purposes we keep the "React Native Testing Library" name, similar to "React Testing Library". Only the npm published package is changing. The code repository also stays the same under Callstack governance.'}),"\n",(0,i.jsxs)(n.h3,{id:"new-aliases",children:["New aliases",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#new-aliases",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["To improve compatibility with React Testing Library, and ease the migration for ",(0,i.jsx)(n.code,{children:"@testing-library/react-native"})," users using version below v7, we've introduced new aliases to our accessibility queries:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ByLabelText"})," aliasing ",(0,i.jsx)(n.code,{children:"ByA11yLabel"})," queries"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ByHintText"})," aliasing ",(0,i.jsx)(n.code,{children:"ByA11yHint"})," queries"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ByRole"})," aliasing ",(0,i.jsx)(n.code,{children:"ByA11yRole"})," queries"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"We like the new names and consider removing the aliases in future releases."}),"\n",(0,i.jsxs)(n.h3,{id:"renaming-byplaceholder-queries",children:["Renaming ",(0,i.jsx)(n.code,{children:"ByPlaceholder"})," queries",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#renaming-byplaceholder-queries",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["To improve compatibility with React Testing Library, and to ease the migration for ",(0,i.jsx)(n.code,{children:"@testing-library/react-native"})," users using version below v7, we've renamed following queries:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ByPlaceholder"})," -> ",(0,i.jsx)(n.code,{children:"ByPlaceholderText"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Please replace all occurrences of these queries in your codebase."}),"\n",(0,i.jsxs)(n.h3,{id:"fireevent-support-for-disabled-components",children:[(0,i.jsx)(n.code,{children:"fireEvent"})," support for disabled components",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#fireevent-support-for-disabled-components",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["To improve compatibility with the real React Native environment ",(0,i.jsx)(n.code,{children:"fireEvent"}),' now performs checks whether the component is "disabled" before firing an event on it. It uses the Responder system to establish should the event fire, which resembles the actual React Native runtime closer than we used to.']}),"\n",(0,i.jsx)(n.p,{children:"If your code contained any workarounds for preventing events firing on disabled events, you should now be able to remove them."}),"\n",(0,i.jsxs)(n.h2,{id:"guide-for-testing-libraryreact-native-users",children:["Guide for ",(0,i.jsx)(n.code,{children:"@testing-library/react-native"})," users",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#guide-for-testing-libraryreact-native-users",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["This guide describes steps necessary to migrate from ",(0,i.jsx)(n.code,{children:"@testing-library/react-native"})," from ",(0,i.jsx)(n.code,{children:"v6.0"})," to ",(0,i.jsx)(n.code,{children:"v7.0"}),". Although the name stays the same, this is a different library, sourced at ",(0,i.jsx)(n.a,{href:"https://github.com/callstack/react-native-testing-library",target:"_blank",rel:"noopener noreferrer",children:"Callstack GitHub repository"}),". We made sure the upgrade path is as easy for you as possible."]}),"\n",(0,i.jsxs)(n.h3,{id:"renaming-wait-helpers",children:['Renaming "wait" helpers',(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#renaming-wait-helpers",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"wait"})," and ",(0,i.jsx)(n.code,{children:"waitForElement"})," helpers are replaced by ",(0,i.jsx)(n.code,{children:"waitFor"}),". Please rename all occurrences of these in your codebase."]}),"\n",(0,i.jsxs)(n.h3,{id:"changes-to-bytestid-queries",children:["Changes to ",(0,i.jsx)(n.code,{children:"ByTestId"})," queries",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#changes-to-bytestid-queries",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ByTestId"})," queries don't accept RegExps. Please use strings instead. We're happy to accept PRs adding this functionality :)."]}),"\n",(0,i.jsxs)(n.h3,{id:"no-bytitle-queries",children:["No ",(0,i.jsx)(n.code,{children:"ByTitle"})," queries",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#no-bytitle-queries",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["Our library doesn't implement ",(0,i.jsx)(n.code,{children:"ByTitle"})," queries, which are targetting components with ",(0,i.jsx)(n.code,{children:"title"})," prop, specifically ",(0,i.jsx)(n.code,{children:"Button"})," and ",(0,i.jsx)(n.code,{children:"RefreshControl"}),". If your tests only use ",(0,i.jsx)(n.code,{children:"ByTitle"})," to target ",(0,i.jsx)(n.code,{children:"Button"})," components, you can replace them with ",(0,i.jsx)(n.code,{children:"ByText"})," queries, since React Native renders ",(0,i.jsx)(n.code,{children:"Text"})," under the hood."]}),"\n",(0,i.jsxs)(n.p,{children:["If you need to query ",(0,i.jsx)(n.code,{children:"RefreshControl"})," component and can't figure out other way around it, you can use e.g. ",(0,i.jsx)(n.code,{children:"UNSAFE_getByProps({title})"})," query."]}),"\n",(0,i.jsxs)(n.h3,{id:"no-custom-jest-configuration",children:["No custom Jest configuration",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#no-custom-jest-configuration",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Use the official React Native preset for Jest:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:'{\n  "jest": {\n-    "preset": "@testing-library/react-native"\n+    "preset": "react-native"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"We're told this also speeds up your tests startup on cold cache. Using official preset has another benefit â€“ the library is compatible with any version of React Native without introducing breaking changes."}),"\n",(0,i.jsxs)(n.h3,{id:"cleanup-is-included-by-default",children:["Cleanup is included by default",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#cleanup-is-included-by-default",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Cleaning up (unmounting) components after each test is included by default in the same manner as in React Testing Library. Please remove this setup file from Jest config:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:'{\n  "jest": {\n-    "setupFilesAfterEnv": ["@testing-library/react-native/cleanup-after-each"]\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["You can opt-out of this behavior by running tests with ",(0,i.jsx)(n.code,{children:"RNTL_SKIP_AUTO_CLEANUP=true"})," flag or importing from ",(0,i.jsx)(n.code,{children:"@testing-library/react-native/pure"}),". We encourage you to keep the default though."]}),"\n",(0,i.jsxs)(n.h3,{id:"no-nativetestinstance-abstraction",children:["No ",(0,i.jsx)(n.a,{href:"https://www.native-testing-library.com/docs/api-test-instance",target:"_blank",rel:"noopener noreferrer",children:"NativeTestInstance"})," abstraction",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#no-nativetestinstance-abstraction",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["We don't provide any abstraction over ",(0,i.jsx)(n.code,{children:"ReactTestInstance"})," returned by queries, but allow to use it directly to access queried component's ",(0,i.jsx)(n.code,{children:"props"})," or ",(0,i.jsx)(n.code,{children:"type"})," for that example."]}),"\n",(0,i.jsxs)(n.h3,{id:"no-container-nor-baseelement-returned-from-render",children:["No ",(0,i.jsx)(n.code,{children:"container"})," nor ",(0,i.jsx)(n.code,{children:"baseElement"})," returned from ",(0,i.jsx)(n.code,{children:"render"}),(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#no-container-nor-baseelement-returned-from-render",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["There's no ",(0,i.jsx)(n.code,{children:"container"})," returned from the ",(0,i.jsx)(n.code,{children:"render"})," function. If you must, use ",(0,i.jsx)(n.code,{children:"react-test-renderer"})," directly, although we advise against doing so. We also don't implement ",(0,i.jsx)(n.code,{children:"baseElement"})," because of that, since there's no ",(0,i.jsx)(n.code,{children:"document.documentElement"})," nor ",(0,i.jsx)(n.code,{children:"container"}),"."]}),"\n",(0,i.jsxs)(n.h3,{id:"firing-events-changes",children:["Firing events changes",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#firing-events-changes",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["There are slight differences in how ",(0,i.jsx)(n.code,{children:"fireEvent"})," works in both libraries:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Our library doesn't perform validation checks for events fired upon tested components."}),"\n",(0,i.jsxs)(n.li,{children:["Signature is different:","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:"-fireEvent[eventName](node: FiberRoot, eventProperties: NativeTestEvent)\n+fireEvent(element: ReactTestInstance, eventName: string, ...data: Array<any>)\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["There is no ",(0,i.jsx)(n.code,{children:"NativeTestEvent"})," - second and rest arguments are used instead."]}),"\n",(0,i.jsxs)(n.li,{children:["There are only 3 short-hand events: ",(0,i.jsx)(n.a,{href:"/docs/api/events/fire-event#press",children:(0,i.jsx)(n.code,{children:"fireEvent.press"})}),", ",(0,i.jsx)(n.a,{href:"/docs/api/events/fire-event#change-text",children:(0,i.jsx)(n.code,{children:"fireEvent.changeText"})})," and ",(0,i.jsx)(n.a,{href:"/docs/api/events/fire-event#scroll",children:(0,i.jsx)(n.code,{children:"fireEvent.scroll"})}),". For all other or custom events you can use the base signature."]}),"\n"]})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}let d=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["12.x%2Fdocs%2Fmigration%2Fprevious%2Fv7.mdx"]={toc:[{text:"Guide for `react-native-testing-library` users",id:"guide-for-react-native-testing-library-users",depth:2},{text:"Renaming the library",id:"renaming-the-library",depth:3},{text:"New aliases",id:"new-aliases",depth:3},{text:"Renaming `ByPlaceholder` queries",id:"renaming-byplaceholder-queries",depth:3},{text:"`fireEvent` support for disabled components",id:"fireevent-support-for-disabled-components",depth:3},{text:"Guide for `@testing-library/react-native` users",id:"guide-for-testing-libraryreact-native-users",depth:2},{text:'Renaming "wait" helpers',id:"renaming-wait-helpers",depth:3},{text:"Changes to `ByTestId` queries",id:"changes-to-bytestid-queries",depth:3},{text:"No `ByTitle` queries",id:"no-bytitle-queries",depth:3},{text:"No custom Jest configuration",id:"no-custom-jest-configuration",depth:3},{text:"Cleanup is included by default",id:"cleanup-is-included-by-default",depth:3},{text:"No NativeTestInstance abstraction",id:"no-nativetestinstance-abstraction",depth:3},{text:"No `container` nor `baseElement` returned from `render`",id:"no-container-nor-baseelement-returned-from-render",depth:3},{text:"Firing events changes",id:"firing-events-changes",depth:3}],title:"Migration to 7.x",headingTitle:"Migration to 7.x",frontmatter:{}}}}]);